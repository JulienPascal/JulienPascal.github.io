<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Neural Networks on Julien Pascal</title>
    <link>https://julienpascal.github.io/tags/neural-networks/</link>
    <description>Recent content in Neural Networks on Julien Pascal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Julien Pascal</copyright>
    <lastBuildDate>Wed, 01 May 2024 08:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://julienpascal.github.io/tags/neural-networks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The bc-MC Operator</title>
      <link>https://julienpascal.github.io/post/bc_mc/</link>
      <pubDate>Wed, 01 May 2024 08:00:00 +0100</pubDate>
      
      <guid>https://julienpascal.github.io/post/bc_mc/</guid>
      <description>Introduction In this blog post, I am going to present my recent work on the bc-MC operator, which was recently published here. In this paper, I propose a new methodology to combine Monte Carlo and neural networks to solve large scale economic models. In this blog post, my goal is to give an intuitive description of this method.
Theory Structure of economic models In many cases, solving an economic model involves finding a policy function $g(.</description>
    </item>
    
  </channel>
</rss>